@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700");
/* ==========================================================================
   Base

   Default settings
========================================================================== */
body {
  text-rendering: geometricPrecision;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

a {
  /* Styles here */
}

a:hover {
  /* Styles here */
}

a:focus {
  outline: none;
}

a:active,
a:hover {
  /* Styles here */
}

.alert-danger {
  color: #D9534F;
  padding: 5px;
  border-radius: 0;
}

.has-error .form-control {
  border: 2px solid #D9534F;
}

/* ==========================================================================
   Buttons 
   Default Bootstrap and Mendix Buttons
========================================================================== */
.btn,
.mx-button {
  margin: 0 2.5px;
}

.btn:hover, .btn:focus, .btn:active,
.mx-button:hover,
.mx-button:focus,
.mx-button:active {
  /* Styles here */
}

.mx-link {
  /* Styles here */
}

.btn-default {
  /* Styles here */
}

.btn-primary {
  /* Styles here */
}

.btn-inverse {
  /* Styles here */
}

.btn-success {
  /* Styles here */
}

.btn-info {
  /* Styles here */
}

.btn-warning {
  /* Styles here */
}

.btn-danger {
  /* Styles here */
}

.btn-big {
  height: 7em;
  border-radius: 0;
}

.btn-big .glyphicon {
  font-size: 20px;
  margin-left: 20px;
  float: left;
}

.btn-card {
  height: 150px;
  width: 100%;
  background: #fff;
  color: #F68E1E;
  border: none;
  box-shadow: 0px 4px 0px 0px #E9EFF2;
  font-size: 18px;
  font-weight: 600;
  border-radius: 1px;
}

.btn-card:hover {
  background: #E9EFF2;
  box-shadow: 0px 4px 0px 0px #F68E1E;
  color: #F68E1E;
}

.link-inverse {
  color: #F68E1E;
}

.mx-grid-search-controls > .btn {
  font-size: 11px;
  padding: 7px 11px;
}

.mx-grid-search-controls > .btn img {
  height: 15px;
}

.mx-button.mx-dateinput-select-button {
  font-size: 11px;
  padding: 7px 11px;
}

.mx-button.mx-dateinput-select-button img {
  height: 15px;
}

.btn-xl {
  font-size: 18px;
  background-color: transparent;
  border: none;
  color: #6E7980;
  width: 100%;
  text-align: left;
  line-height: 30px;
  box-sizing: border-box;
  margin: 20px 0;
}

.btn-xl > .glyphicon {
  font-size: 40px;
  padding-right: 10px;
}

@media (max-width: 600px) {
  .btn-xl {
    font-size: 16px;
  }
  .btn-xl > .glyphicon {
    font-size: 26px;
  }
}

.btn-xl:hover, .btn-xl:focus {
  background: #E9EFF2;
  box-shadow: 0px 4px 0px 0px #F68E1E;
  color: #3F474D;
}

.btn-fuser {
  border: none;
  border-radius: 50%;
  width: 80px;
  height: 80px;
  padding: 0;
  margin: 10px auto;
  overflow-x: hidden;
  color: transparent;
}

@media (max-width: 600px) {
  .btn-fuser {
    width: 100px;
    height: 100px;
  }
}

.btn-fuser:hover, .btn-fuser:focus {
  -webkit-box-shadow: inset 0px 0px 50px 15px #E9EFF2;
  -moz-box-shadow: inset 0px 0px 50px 15px #E9EFF2;
  box-shadow: inset 0px 0px 50px 15px #E9EFF2;
  color: shade(#6E7980, 40%);
  font-weight: 600;
  font-size: 18px;
}

@media (max-width: 600px) {
  .btn-fuser:hover, .btn-fuser:focus {
    -webkit-box-shadow: inset 0px 0px 100px 15px #E9EFF2;
    -moz-box-shadow: inset 0px 0px 100px 15px #E9EFF2;
    box-shadow: inset 0px 0px 100px 15px #E9EFF2;
  }
}

.btn-fuser-1 {
  background-image: url(/styles/images/Marlies_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-2 {
  background-image: url(/styles/images/Lonneke_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-3 {
  background-image: url(/styles/images/Friso_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-4 {
  background-image: url(/styles/images/Rochus_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-5 {
  background-image: url(/styles/images/Chris_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-6 {
  background-image: url(/styles/images/Jeroen_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-7 {
  background-image: url(/styles/images/Tom_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-8 {
  background-image: url(/styles/images/Simon_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-9 {
  background-image: url(/styles/images/Ralph_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-10 {
  background-image: url(/styles/images/Andrew_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-11 {
  background-image: url(/styles/images/Ric_500_500.png);
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-12 {
  background-image: url(/styles/images/Ron_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-13 {
  background-image: url(/styles/images/Robbert_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-14 {
  background-image: url(/styles/images/Thomas_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-15 {
  background-image: url(/styles/images/Alex_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-16 {
  background-image: url(/styles/images/Hugo_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-17 {
  background-image: url(/styles/images/Jelle_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-18 {
  background-image: url(/styles/images/Loet_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-19 {
  background-image: url(/styles/images/Lennard_500_500.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-20 {
  background-image: url(/styles/images/Kevin_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-21 {
  background-image: url(/styles/images/Johan_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-22 {
  background-image: url(/styles/images/Tim_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-23 {
  background-image: url(/styles/images/Wouter_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-24 {
  background-image: url(/styles/images/Richard_500_500.jpg);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-fuser-25 {
  background-image: url(/styles/images/vraagteken.png);
  background-position: 50% 50%;
  background-size: cover;
}

.btn-small {
  border: none;
  background: transparent;
  margin: 5px auto;
  padding: 5px;
}

.btn-small:hover, .btn-small:focus {
  background-color: transparent;
}

.link-stylingless a {
  color: #42494d;
}

.link-stylingless a .mx-link a {
  color: #42494d;
}

/* ==========================================================================
   Datagrid Default

   Default Mendix Datagrid Widget. The datagrid shows a list of objects in a grid
========================================================================== */
.mx-datagrid {
  /* Styles here */
}

.mx-datagrid .mx-datagrid-head-table {
  background-color: #fff;
}

.mx-datagrid .mx-datagrid-head-table .mx-datagrid-head-wrapper {
  /* Styles here */
}

.mx-datagrid .mx-datagrid-body-table {
  /* Styles here */
}

.mx-datagrid .mx-datagrid-body-table .mx-datagrid-body tr {
  /* Styles here */
}

.mx-datagrid .mx-datagrid-body-table .mx-datagrid-body tr td {
  /* Styles here */
}

.mx-datagrid .mx-datagrid-body-table .mx-datagrid-body tr.selected td,
.mx-datagrid .mx-datagrid-body-table .mx-datagrid-body tr.selected:hover td {
  color: #fff;
}

/* ==========================================================================
   Dataview

   Default Mendix Dataview Widget. The data view is used for showing the contents of exactly one object
========================================================================== */
.mx-dataview {
  /* Styles here */
}

.mx-dataview .mx-dataview-controls {
  /* Styles here */
}

/* ==========================================================================
   Grid

   Default Mendix Grid
========================================================================== */
.mx-grid {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-pagingbar {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-pagingbar .mx-button {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-pagingbar .mx-button:hover {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-pagingbar .mx-grid-paging-status {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-searchbar {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-searchbar .mx-grid-search-item {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-searchbar .mx-grid-search-item .mx-grid-search-label {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-searchbar .mx-grid-search-input {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-searchbar .mx-grid-search-input .form-control {
  /* Styles here */
}

.mx-grid .mx-grid-controlbar .mx-grid-searchbar .mx-grid-search-input .mx-button {
  /* Styles here */
}

/* ==========================================================================
   Groupbox

   Default Mendix Groupboxes
========================================================================== */
.mx-groupbox {
  /* Styles here */
}

.mx-groupbox > .mx-groupbox-header {
  font-size: inherit;
  font-weight: inherit;
  color: inherit;
}

.mx-groupbox > .mx-groupbox-header .mx-groupbox-collapse-icon {
  transition: all 0.2s ease-in-out;
  float: left;
  margin-right: 5px;
}

.mx-groupbox > .mx-groupbox-header .mx-groupbox-collapse-icon.glyphicon-plus {
  /* Styles here */
}

.mx-groupbox > .mx-groupbox-header .mx-groupbox-collapse-icon.glyphicon-plus:before {
  content: "\e259";
}

.mx-groupbox > .mx-groupbox-header .mx-groupbox-collapse-icon.glyphicon-minus {
  transform: rotate(-180deg);
}

.mx-groupbox > .mx-groupbox-header .mx-groupbox-collapse-icon.glyphicon-minus:before {
  content: "\e259";
}

.mx-groupbox > .mx-groupbox-header > .mx-groupbox-body {
  /* Styles here */
}

.mx-groupbox > .mx-groupbox-header .mx-groupbox-header + .mx-groupbox-body {
  /* Styles here */
}

.mx-groupbox > .mx-groupbox-header.collapsed > .mx-groupbox-header {
  /* Styles here */
}

.groupbox-fontweight-600 > .mx-groupbox-header {
  font-weight: 600;
}

/* ==========================================================================
   Inputs
========================================================================== */
.form-control {
  padding: 5px;
}

.form-control:focus {
  /* Styles here */
}

.form-group .control-label {
  /* Styles here */
}

/* ==========================================================================
   Listview

   Default Mendix Listview Widget. The list view shows a list of objects arranged vertically. Each object is shown using a template
========================================================================== */
.mx-listview {
  /* Styles here */
}

.mx-listview .mx-button.mx-listview-clear-button {
  /* Styles here */
}

.mx-listview > .mx-button {
  /* Load more button */
}

.mx-listview .mx-listview-item {
  /* Styles here */
}

.mx-listview .mx-listview-item:hover {
  /* Styles here */
}

.mx-listview .mx-listview-item.selected {
  /* Styles here */
}

.mx-listview .mx-listview-item.selected:hover {
  /* Styles here */
}

.mx-listview .mx-listview-item:nth-child(2n+1) {
  /* Styles here */
}

.listview-small .mx-listview-item {
  padding: 0;
}

.listview-no-loadMore {
  margin-bottom: 0;
}

.listview-no-loadMore .mx-listview-loadMore {
  display: hidden;
  visibility: hidden;
}

.listview-noempty.mx-listview {
  margin: 0;
}

.listview-noempty.mx-listview .mx-listview-empty {
  display: none;
}

.mx-listview-empty {
  display: none;
}

.mx-listview-list .mx-listview-empty label {
  display: none;
}

.listview-inline .mx-listview-item {
  display: inline-block;
  vertical-align: top;
}

/* ==========================================================================
   Modals

   Default Mendix Modals. Modals are streamlined, but flexible, dialog prompts with the minimum required functionality and smart defaults
========================================================================== */
.modal-dialog {
  /* Styles here */
}

.modal-dialog .modal-content {
  /* Styles here */
}

.modal-dialog .modal-content .modal-header {
  /* Styles here */
}

.modal-dialog .modal-content .modal-header h4 {
  /* Styles here */
}

.modal-dialog .modal-content .modal-header .close {
  /* Styles here */
}

.modal-dialog .modal-content .modal-body {
  /* Styles here */
}

.modal-dialog .modal-content .modal-footer {
  /* Styles here */
}

/* Default Mendix Window Modal */
/* Default Mendix Login Modal */
.mx-login {
  /* Styles here */
}

.mx-login .modal-body {
  /* Styles here */
}

.mx-login .modal-content {
  /* Styles here */
}

.mx-login .modal-header,
.mx-login .modal-footer {
  /* Styles here */
}

.mx-login button {
  /* Styles here */
}

.mx-login h4 {
  /* Styles here */
}

/* ==========================================================================
   Navigation

   Default Mendix Navigation Bar
========================================================================== */
.mx-navbar {
  /* Styles here */
}

.mx-navbar ul.nav {
  /* Styles here */
}

.mx-navbar ul.nav > li.mx-navbar-item > a {
  font-weight: normal;
  border-bottom: 4px solid transparent;
}

.mx-navbar ul.nav > li.mx-navbar-item > a:hover, .mx-navbar ul.nav > li.mx-navbar-item > a:focus, .mx-navbar ul.nav > li.mx-navbar-item > a.active {
  border-bottom: 4px solid #F68E1E;
}

.mx-navbar ul.nav > li.mx-navbar-item > a.active {
  /* Styles here */
}

.mx-navbar ul.nav > li.mx-navbar-item > a .mx-navbar-submenu:before {
  /* Dropdown Menu */
}

.mx-navbar ul.nav > .mx-navbar-item > a:hover,
.mx-navbar ul.nav > .mx-navbar-item > a:focus,
.mx-navbar ul.nav > .mx-navbar-item.active a,
.mx-navbar ul.nav > .mx-navbar-item.open > a,
.mx-navbar ul.nav > .mx-navbar-item.open > a:hover,
.mx-navbar ul.nav > .mx-navbar-item.open > a:focus {
  border-bottom: 4px solid #F68E1E;
  background-color: #FFFFFF;
  /* When hovering or the dropdown is open */
}

.mx-navbar ul.nav > .mx-navbar-item.open .dropdown-menu > li.mx-navbar-subitem.active a {
  /* Styles here */
}

/* ==========================================================================
   Navigation

   Default Mendix Navigation Tree
========================================================================== */
.mx-navigationtree {
  width: 100%;
  padding: 0;
  position: relative;
  top: 0;
  /* Styles here */
}

.mx-navigationtree .navbar-inner ul li {
  /* Styles here */
}

.mx-navigationtree .navbar-inner ul li a {
  font-weight: normal;
  padding: 15px 20px 0px 16px;
  width: 100%;
  height: 80px;
  transition: padding, width .2s;
  webkit-transition: padding, width .2s;
  word-wrap: normal;
}

.mx-navigationtree .navbar-inner ul li a > .glyphicon {
  display: block;
  font-size: 18px;
  padding-right: 5px;
  transition: font-size .2s;
  webkit-transition: font-size .2s;
}

@media (max-width: 600px) {
  .mx-navigationtree .navbar-inner ul li a {
    padding: 15px 5px 0px 5px;
    height: 50px;
  }
  .mx-navigationtree .navbar-inner ul li a .glyphicon {
    font-size: 16px;
  }
}

.mx-navigationtree .navbar-inner ul li a.active {
  /* Styles here */
}

.mx-navigationtree .navbar-inner ul li a.active .glyphicon {
  font-size: 2.2em;
}

@media (max-width: 600px) {
  .mx-navigationtree .navbar-inner ul li a.active .glyphicon {
    font-size: 1.8em;
  }
}

.mx-navigationtree .navbar-inner ul li a.active {
  width: 105%;
  border-left-color: #F68E1E;
  box-shadow: 1px 1px 2px 0 #879BAD;
  z-index: 10;
}

.mx-navigationtree li.mx-navigationtree-has-items > ul li a {
  background-color: #FFF;
}

.mx-navigationtree li.mx-navigationtree-has-items > ul li a:hover, .mx-navigationtree li.mx-navigationtree-has-items > ul li a:focus, .mx-navigationtree li.mx-navigationtree-has-items > ul li a.active {
  background-color: #E9EFF2;
}

/* ==========================================================================
   Navigation

   Default Mendix Simple Menu Bar
========================================================================== */
.mx-menubar {
  /* Styles here */
}

.mx-menubar ul.mx-menubar-list {
  /* Styles here */
}

.mx-menubar ul.mx-menubar-list li.mx-menubar-item {
  /* Styles here */
}

.mx-menubar ul.mx-menubar-list li.mx-menubar-item a {
  /* Styles here */
}

.mx-menubar ul.mx-menubar-list li.mx-menubar-item:hover a,
.mx-menubar ul.mx-menubar-list li.mx-menubar-item:focus a,
.mx-menubar ul.mx-menubar-list li.mx-menubar-item.active a {
  /* Styles here */
}

.mx-menubar ul.mx-menubar-list li.mx-menubar-item.active a {
  /* Styles here */
}

.nav-user {
  padding-top: 20px;
  padding-right: 20px;
}

/* ==========================================================================
   Navigation List

   Default Mendix Navigation List Widget. A navigation list can be used to attach an action to an entire row. Such a row is called a navigation list item
========================================================================== */
.mx-navigationlist {
  /* Styles here */
}

.mx-navigationlist .mx-navigationlist-item {
  /* Styles here */
}

.mx-navigationlist .mx-navigationlist-item:hover {
  /* Styles here */
}

/* ==========================================================================
   Tab Container

   Default Mendix Tab Container Widget. Tab containers are used to show information categorized into multiple tab pages. 
   This can be very useful if the amount of information that has to be displayed is larger than the amount of space on the screen
========================================================================== */
.mx-tabcontainer {
  /* Styles here */
}

.mx-tabcontainer .mx-tabcontainer-tabs {
  /* Styles here */
}

.mx-tabcontainer .mx-tabcontainer-tabs > li > a {
  /* Styles here */
}

.mx-tabcontainer .mx-tabcontainer-tabs > li > a:hover, .mx-tabcontainer .mx-tabcontainer-tabs > li > a:focus {
  /* Styles here */
}

.mx-tabcontainer .mx-tabcontainer-tabs > li.active > a,
.mx-tabcontainer .mx-tabcontainer-tabs > li.active > a:hover,
.mx-tabcontainer .mx-tabcontainer-tabs > li.active > a:focus {
  /* Styles here */
}

.mx-tabcontainer .mx-tabcontainer-content {
  /* Styles here */
}

/* ==========================================================================
   Tables

   Default Mendix Table Widget. Tables can be used to lend structure to a page. They contain a number of rows (tr) and columns, the intersection of which is called a cell (td). Each cell can contain widgets
========================================================================== */
table.mx-table {
  /* Styles here */
}

table.mx-table > tbody > tr {
  /* Styles here */
}

table.mx-table > tbody > tr > th {
  /* Styles here */
}

table.mx-table > tbody > tr > th > label {
  /* Styles here */
}

table.mx-table > tbody > tr > td {
  /* Styles here */
}

/* ==========================================================================
   Templategrid

   Default Mendix Templategrid Widget. The template grid shows a list of objects in a tile view. For example, a template grid can show a list of products. The template grid has a lot in common with the data grid. The main difference is that the objects are shown in templates (a sort of small data view) instead of rows
========================================================================== */
.mx-templategrid {
  /* Styles here */
}

.mx-templategrid .mx-templategrid-item {
  /* Styles here */
}

@media (min-width: 600px) {
  .mx-templategrid .mx-templategrid-item {
    width: 100px;
  }
}

.mx-templategrid .mx-templategrid-item:hover {
  /* Styles here */
}

.mx-templategrid .mx-templategrid-item.selected {
  /* Styles here */
}

.mx-templategrid .mx-templategrid-item.selected:hover {
  /* Styles here */
}

.templategrid-inline {
  width: 100%;
  text-align: center;
  border: 1px solid #E9EFF2;
  padding: 10px;
  margin: auto;
}

.templategrid-inline .mx-templategrid-item {
  vertical-align: top;
  cursor: hand;
}

.templategrid-inline .mx-templategrid-item:hover, .templategrid-inline .mx-templategrid-item:focus {
  background-color: #E9EFF2;
}

.templategrid-inline .mx-templategrid-item .glyphicon {
  transition: all 0.2s;
  padding: 5px;
}

.templategrid-inline .mx-templategrid-item .glyphicon:hover, .templategrid-inline .mx-templategrid-item .glyphicon:focus {
  background-color: #F68E1E;
  color: #fff;
  border-radius: 50px;
}

@media (max-width: 600px) {
  .templategrid-inline .mx-templategrid-item {
    display: block;
    width: 100% !important;
  }
}

/* ==========================================================================
   Typography
========================================================================== */
p {
  /* Styles here */
}

.badge {
  margin: 5px 0;
}

@media (max-width: 600px) {
  .badge {
    font-size: 0.9em;
    width: auto;
  }
}

@media (max-width: 600px) {
  label {
    font-size: 0.9em;
  }
}

@media (max-width: 600px) {
  .label-danger {
    font-size: 0.9em;
  }
}

@media (max-width: 600px) {
  .mx-title {
    font-size: 2rem;
  }
}

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-weight: 600;
}

/* ==========================================================================
   Regions

   Used for navigation layouts
========================================================================== */
.region-topbar {
  /* Styles here */
}

.region-topbar > .mx-layoutcontainer-wrapper {
  /* Styles here */
}

.region-topbar .toggle-btn {
  /* Styles here */
}

.region-topbar .navbar-right {
  /* SSO widgets */
}

.region-topbar .navbar-right .mx-appswitcher-button-placeholder,
.region-topbar .navbar-right .mx-profilemenu-button-placeholder {
  /* Styles here */
}

.region-topbar .navbar-right .mx-appswitcher-button-placeholder iframe,
.region-topbar .navbar-right .mx-profilemenu-button-placeholder iframe {
  /* Styles here */
}

.region-topbar .navbar-right .mx-profilemenu-button-placeholder {
  /* Styles here */
}

.region-sidebar {
  padding: 0;
  width: 10px;
}

.region-sidebar > .mx-layoutcontainer-wrapper {
  width: 100%;
  /* Styles here */
}

.region-content {
  /* Styles here */
}

.region-content > .mx-layoutcontainer-wrapper {
  width: 100%;
}

/* ==========================================================================
   Navbar Brand

   Used to style your app brand and logo
========================================================================== */
.navbar-brand {
  /* Styles here */
}

.navbar-brand img {
  /* Styles here */
}

.navbar-brand a {
  /* Styles here */
}

.navbar-brand a:hover, .navbar-brand a:focus {
  /* Styles here */
}

/* ==========================================================================
   Layout

   Default Mendix Layout
========================================================================== */
/* ==========================================================================
   Listview for phone and tablet
========================================================================== */
.profile-phone,
.profile-tablet {
  /* Listview Load More button */
}

.profile-phone .mx-listview .mx-listview-searchbar,
.profile-tablet .mx-listview .mx-listview-searchbar {
  /* Reset Search Button - default hidden */
  /* Search Field */
}

/* ==========================================================================
   Header

   Default Mendix Header for Mobile 
========================================================================== */
/* ==========================================================================
   Tabcontainer

   Default Mendix Tabcontainer for Mobile 
========================================================================== */
/* ==========================================================================
   Special styles for presenting Page Template Dashboard
========================================================================== */
.page-dashboard {
  /* Styles here */
}

.page-dashboard-default {
  /* Styles here */
}

.page-dashboard-default .card {
  /* Styles here */
}

.page-dashboard-mytasks {
  /* Styles here */
}

.page-dashboard-mytasks .card {
  /* Styles here */
}

.page-dashboard-actions {
  background: -webkit-linear-gradient(#FFF, #E9EFF2, #879BAD);
  /* For Safari 5.1 to 6.0 */
  background: -o-linear-gradient(#FFF, #E9EFF2, #879BAD);
  /* For Opera 11.1 to 12.0 */
  background: -moz-linear-gradient(#FFF, #E9EFF2, #879BAD);
  /* For Firefox 3.6 to 15 */
  background: linear-gradient(#FFF, #E9EFF2, #879BAD);
  /* Standard syntax */
}

.page-dashboard-actions-tasks {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Form
========================================================================== */
.page-form {
  /* Styles here */
}

.page-form-default {
  /* Styles here */
}

.page-form-imagemap {
  /* Styles here */
}

.page-form-tabs {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Login
========================================================================== */
/* ==========================================================================
   Special styles for presenting Page Template Master Detail
========================================================================== */
.page-masterdetail {
  /* Styles here */
}

.page-masterdetail-basic {
  /* Styles here */
}

.page-masterdetail-big {
  /* Styles here */
}

.page-masterdetail-imagemap {
  /* Styles here */
}

.page-masterdetail-multilevel {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Tabs
========================================================================== */
.page-tabs {
  /* Styles here */
}

.page-tabs .tabsfullwidth {
  /* Styles here */
}

.page-tabs-default {
  /* Styles here */
}

.page-tabs-fullwidth {
  /* Styles here */
}

.page-tabs-fullwidth .pageheader.pageheader-fullwidth {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Website
========================================================================== */
.page-website {
  /* Styles here */
}

.page-website-actions {
  /* Styles here */
}

.page-website-items {
  /* Styles here */
}

.page-website-items-detail {
  /* Styles here */
}

.page-website-presentation {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Wizard
========================================================================== */
.page-wizard {
  /* Styles here */
}

.page-wizard-default {
  /* Styles here */
}

.page-wizard-titlecentered {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Phone
========================================================================== */
.phone-page-dashboard {
  /* Styles here */
}

.phone-page-dashboard-default {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Phone Form
========================================================================== */
.phone-page-form {
  /* Styles here */
}

.phone-page-form-default {
  /* Styles here */
}

.phone-page-form-edit {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Phone Listview
========================================================================== */
.phone-page-listview {
  /* Styles here */
}

.phone-page-listview-default {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Phone Wizard
========================================================================== */
.phone-page-wizard {
  /* Styles here */
}

.phone-page-wizard-default {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Tablet Dashboard
========================================================================== */
.tablet-page-dashboard {
  /* Styles here */
}

.tablet-page-dashboard-default {
  /* Styles here */
}

.tablet-page-dashboard-big {
  /* Styles here */
}

.tablet-page-dashboard-mytasks {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Tablet Form
========================================================================== */
.tablet-page-form {
  /* Styles here */
}

.tablet-page-form-default {
  /* Styles here */
}

.tablet-page-form-edit {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Tablet Master Detail
========================================================================== */
.tablet-page-masterdetail {
  /* Styles here */
}

.tablet-page-masterdetail-default {
  /* Styles here */
}

.tablet-page-masterdetail-leftright {
  /* Styles here */
}

/* ==========================================================================
   Special styles for presenting Page Template Tablet Wizard
========================================================================== */
.tablet-page-wizard {
  /* Styles here */
}

.tablet-page-wizard-default {
  /* Styles here */
}

.fc-state-default.fc-corner-left {
  border-top-left-radius: 1px;
  border-bottom-left-radius: 1px;
}

.fc-state-default.fc-corner-right {
  border-top-right-radius: 1px;
  border-bottom-right-radius: 1px;
}

.fc-bg, .fc-bgevent-skeleton, .fc-helper-skeleton, .fc-highlight-skeleton {
  position: absolute;
}

.fc td, .fc th {
  padding: 2px;
}

.fc-row {
  position: relative;
}

.fc-event.fc-selected {
  box-shadow: none;
}

.fc-event.fc-selected.fc-dragging {
  box-shadow: none;
}

.fc-day-grid-event {
  margin: -1px 1px 0;
  padding: 0 1px;
}

.fc-toolbar {
  margin-bottom: 5px;
}

.fc-basicDay-view .fc-content-skeleton, .fc-basicWeek-view .fc-content-skeleton {
  padding-bottom: 0px;
}

.fc-basic-view .fc-body .fc-row {
  min-height: 1em;
}

.fc-agenda-view .fc-day-grid .fc-row {
  min-height: 2em;
}

.fc-agenda-view .fc-day-grid .fc-row .fc-content-skeleton {
  padding-bottom: 0px;
}

/* ==========================================================================
   Card
========================================================================== */
.card {
  border: #fff;
  border-radius: 1px;
  box-shadow: 0 1px 3px 0 #879BAD;
}

.card-header-action {
  /* Title + button + border below title and button */
}

.card-header-action .card-title {
  /* Styles here */
}

.card-header-action .btn {
  /* Styles here */
}

.card-details {
  /* Styles here */
}

.card-title {
  border-bottom: 1px solid #E9EFF2;
}

.card-subtitle {
  /* Styles here */
}

.card-annotation {
  /* Styles here */
}

.card-icon {
  /* Styles here */
}

.card-icon .glyphicon {
  /* Styles here */
}

.card-image {
  /* Styles here */
}

.card-link {
  /* Styles here */
}

.card-fixed-200 {
  height: 200px;
}

.card-fixed-300 {
  height: 300px;
  overflow-y: scroll;
}

.card-fixed-450 {
  height: 450px;
  position: relative;
  overflow-y: scroll;
}

.card-fixed-480 {
  height: 480px;
  position: relative;
  overflow-y: scroll;
}

.card-fixed-600 {
  height: 600px;
  overflow-y: scroll;
}

@media (max-width: 600px) {
  .card-fixed-600 {
    height: auto;
  }
}

.card-min-1000 {
  min-height: 1000px;
}

@media (max-width: 600px) {
  .card-min-1000 {
    min-height: auto;
  }
}

.container-190 {
  position: relative;
  height: 180px;
  margin-bottom: 10px;
}

.container-90-percent {
  height: 90%;
  overflow-y: scroll;
}

@media (max-width: 600px) {
  .container-90-percent {
    height: 75%;
  }
}

/* ==========================================================================
   Dashboard Card
========================================================================== */
.dashboardcard {
  /* Styles here */
}

.dashboardcard-title {
  /* Styles here */
}

.dashboardcard-subtitle {
  /* Styles here */
}

.dashboardcard-link {
  /* Styles here */
}

/* ==========================================================================
   Dashboard Stats

   Used in dashboard
========================================================================== */
.dashboardstat {
  /* Styles here */
}

.dashboardstat .dashboardstat-left,
.dashboardstat .dashboardstat-right {
  /* Styles here */
}

.dashboardstat-icon {
  /* Styles here */
}

.dashboardstat-title {
  /* Styles here */
}

.dashboardstat-number {
  /* Styles here */
}

/* ==========================================================================
   Form

   To extend the default form
========================================================================== */
.form {
  /* Styles here */
}

.form-footer {
  /* Styles here */
}

/* ==========================================================================
   Form Block

   Used in default forms
========================================================================== */
.formblock {
  /* Styles here */
}

.formblock-header {
  /* Styles here */
}

/* ==========================================================================
   Page Header
========================================================================== */
.pageheader {
  /* Styles here */
}

.pageheader.section {
  /* Styles here */
}

.pageheader-title {
  /* Styles here */
}

.pageheader-subtitle {
  /* Styles here */
}

/* ==========================================================================
   Section Header
========================================================================== */
/* ==========================================================================
   Profile Card
========================================================================== */
.profilecard {
  /* Styles here */
}

.profilecard .profilecard-contentwrapper {
  /* Styles here */
}

.profilecard .profilecard-imgwrapper {
  /* Styles here */
}

.profilecard .profilecard-actionwrapper {
  /* Styles here */
}

.profilecard .profilecard-contentwrapper,
.profilecard .profilecard-imgwrapper,
.profilecard .profilecard-actionwrapper {
  /* Styles here */
}

.profilecard-btn {
  /* Styles here */
}

.profilecard-img {
  /* Styles here */
}

.profilecard-title {
  /* Styles here */
}

.profilecard-subtitle {
  /* Styles here */
}

.pageheader .profilecard {
  /* Styles here */
}

/* ==========================================================================
   Profile Header
========================================================================== */
.profileheader {
  /* Styles here */
}

.profileheader .profileheader-content {
  /* Styles here */
}

.profileheader .profileheader-image {
  /* Styles here */
}

/* ==========================================================================
   Products

   Used in Website page templates
========================================================================== */
.product-header {
  /* Styles here */
}

.product-content {
  /* Styles here */
}

.product-title {
  /* Styles here */
}

.product-subtitle {
  /* Styles here */
}

.product-btn {
  /* Styles here */
}

.section {
  padding: 70px 0;
}

.section.section-hero {
  height: 400px;
  pading: 100px 0;
}

.section.section-footer {
  padding: 80px 0;
  height: 300px;
  background-color: #3F474D;
}

.section.section-footer .mx-link {
  display: block;
  color: shade(#6E7980, 40%);
}

.section.section-footer .mx-link:hover {
  color: #E9EFF2;
}

.section .sectionheader {
  margin: 0;
  padding: 20px 0;
  border: none;
}

.profile-phone .section {
  /* Styles here */
}

.profile-tablet .section {
  /* Styles here */
}

/* ==========================================================================
   Sidebar Header
========================================================================== */
.sidebarheader {
  /* Styles here */
}

.sidebarheader-content {
  /* Styles here */
}

.sidebarheader-img {
  /* Styles here */
}

.sidebarheader-title {
  /* Styles here */
}

.sidebarheader-subtitle {
  /* Styles here */
}

/* ==========================================================================
   Tabs full width
========================================================================== */
.tabsfullwidth {
  /* Styles here */
}

.tabsfullwidth > .mx-tabcontainer-tabs {
  /* Styles here */
}

.tabsfullwidth > .mx-tabcontainer-content {
  /* Styles here */
}

/* ==========================================================================
   Wizard

   Styling for Wizard (Steps/Numbers)
========================================================================== */
.wizard {
  /* Wizard line between steps */
}

.wizard:before {
  /* Styles here */
}

.wizard-step {
  /* Styles here */
}

.wizard-step-number {
  /* Styles here */
}

.wizard-step-number-active {
  /* Styles here */
}

.wizard-step-number-visited {
  /* Styles here */
}

.wizard-step-title {
  /* Styles here */
}

/* Phone Specific Styling */
.profile-phone .wizard:before {
  /* Styles here */
}

.profile-phone .wizard .wizard-step-number {
  /* Styles here */
}

/* ==========================================================================
   Templategrid Profile Card

   Profile card styled for templategrid
========================================================================== */
.templategrid-profilecard {
  /* Styles here */
}

.templategrid-profilecard .templategrid-profilecard-contentwrapper {
  /* Styles here */
}

.templategrid-profilecard .templategrid-profilecard-imgwrapper {
  /* Styles here */
}

.templategrid-profilecard .templategrid-profilecard-contentwrapper,
.templategrid-profilecard .templategrid-profilecard-imgwrapper {
  /* Styles here */
}

.templategrid-profilecard .templategrid-profilecard-btn {
  /* Styles here */
}

.templategrid-profilecard .templategrid-profilecard-img {
  /* Styles here */
}

.templategrid-profilecard .templategrid-profilecard-title {
  /* Styles here */
}

.templategrid-profilecard .templategrid-profilecard-subtitle {
  /* Styles here */
}

/*# sourceMappingURL=data:application/json;base64, */
